Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
 https://github.com/mmzayats/JSON.git

 5. Клонировать репозиторий JSON на локальный компьютер.
 git clone https://github.com/mmzayats/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
 touch “new.json”	

 7. Добавить файл под гит.
 git add “new.json”

 8. Закоммитить файл.
 git commit -m "Выполняю задание №8"

 9. Отправить файл на внешний GitHub репозиторий.
 git push

 10. Отредактировать содержание файла "new.json"- написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json
 jsonPerson = '{"name":"Zayats Maksim","age":"34","number of pets":"1","salary":"2000$"}'

 11. Отправить изменения на внешний репозиторий.
 git commit -m "Выполняю задание №10 и 11"
 git push
 
 12. Создать файл preferences.json
 vim preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 vim preferences.json
 JsonPreferences = '{"film":"The Client","TVseries":"Gambit Queen","favorite food":"Pizza","favorite time of the year":"summer","favorite country":"Portugale"}'

 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 vim skills.json
 jsonSkills = '
 {"skill":"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC"}
 {"skill":"Что такое клиент-серверная архитектура."}
 {"skill":"HTTP Методы запросов на сервер."}
 {"skill":"Коды ответов HTTP сервера."}
 {"skill":"Структуры HTTP запросов и ответов."}
 {"skill":"Что такое JSON, XML. Их структура."}
 {"skill":"Тестирование API через Postman (JS, автотесты API)."}
 {"skill":"Снятие и чтение логов c внешнего сервера."}
 {"skill":"Снифинг http web трафика через Charles и Fiddler."}
 {"skill":"Dev Tools веб браузеров (Google Chrome, FireFox)."}
 {"skill":"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)"}
 {"skill":"Мобильное тестирование."}
 {"skill":"Особенность iOS, Android, гайдлайны."}
 {"skill":"Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)"}
 {"skill":"Сборка Android приложений на Android Studio."}
 {"skill":"ADB (управление андройд девайсами)."}
 {"skill":"Настройка прокси и vpn на iOS и Android."}
 {"skill":"Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android."}
 {"skill":"Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)"}
 {"skill":"Основы bash скриптинг, автоматизация рутинных задач на сервере."}
 {"skill":"Доступ к удалённым серверам."}
 {"skill":"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join)."}
 {"skill":"База данных Postgres (установка, настройка и использование)."}
 {"skill":"Нереляционная база данных Redis (установка, настройка и использование)."}
 {"skill":"Нагрузочное тестирование в Jmeter."}
 {"skill":"Методология разработки Scrum."}
 {"skill":"Python. (Изучение основ. Создание клиент серверного приложения)"}	
	
 15. Отправить сразу 2 файла на внешний репозиторий.
 git add .
 git commit -m "Выполняю задание №12-14"
 git push

 16. На веб интерфейсе создать файл bug_report.json.
 https://github.com/mmzayats/JSON/blob/main/bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 https://github.com/mmzayats/JSON/blob/main/bug_report.json

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 Bug_rep = '{"Summary":"Where is button?","Project_number":"161","Component":"Start desktop","Version":"001.0","Severity":"Critical","Priority":"High","Status":"S1","Author":"Maksim Zayats","Assigned To":"Anastasiay Zayats","Description":"Not here button 'Sign-in'","Attachment":"null"}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 commit 		 

 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull


XML
 21. Создать внешний репозиторий c названием XML.
 https://github.com/mmzayats/XML

 22. Клонировать репозиторий XML на локальный компьютер.
 git clone https://github.com/mmzayats/XML.git

 23. Внутри локального XML создать файл “new.xml”.
 touch new.xml

 24. Добавить файл под гит.
 git add new.xml

 25. Закоммитить файл.
 git commit -m "Выполняю задание №25"

 26. Отправить файл на внешний GitHub репозиторий.
 git push	

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 vim new.xml
 <?xml version="1.0"?>
 <MY>
  <NAME>Zayats</NAME>
  <LAST_NAME>Maksim</LAST_NAME>
  <AGE>34</AGE>
  <number_of_pets>1</number_of_pets>
  <salary>2000$</salary>
 </MY> 

 28. Отправить изменения на внешний репозиторий.
 git add new.xml
 git commit -m "Выполняю задание №28"
 git push

 29. Создать файл preferences.xml
 touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 vim preferences.xml
 <?xml version="1.0"?>
 <prefere>
  <film>The Client</film>
  <TVseries>Gambit Queen</TVseries>
  <favorite_food>Pizza</favorite_food>
  <favorite_time_of_the_year>summer</favorite_time_of_the_year>
  <favorite_country>Portugale</favorite_country>
 </prefere> 

 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 touch skills.xml
 <?xml version="1.0"?>
 <skills>
        <sk>Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC</sk>
	<sk0>Что такое клиент-серверная архитектура.</sk0>
	<sk1>HTTP Методы запросов на сервер.</sk1>
	<sk2>Коды ответов HTTP сервера.</sk2>
	<sk3>Структуры HTTP запросов и ответов.</sk3>
	<sk4>Что такое JSON, XML. Их структура.</sk4>
	<sk5>Тестирование API через Postman (JS, автотесты API).</sk5>
	<sk6>Снятие и чтение логов c внешнего сервера.</sk6>
	<sk7>Снифинг http web трафика через Charles и Fiddler.</sk7>
	<sk8>Dev Tools веб браузеров (Google Chrome, FireFox).</sk8>
	<sk9>VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)</sk9>
	<sk10>Мобильное тестирование.</sk10>
	<sk11>Особенность iOS, Android, гайдлайны.</sk11>
	<sk12>Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)</sk12>
	<sk13>Сборка Android приложений на Android Studio.</sk13>
	<sk14>ADB (управление андройд девайсами).</sk14>
	<sk15>Настройка прокси и vpn на iOS и Android.</sk15>
	<sk16>Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.</sk16>
	<sk17>Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)</sk17>
	<sk18>Основы bash скриптинг, автоматизация рутинных задач на сервере.</sk18>
	<sk19>Доступ к удалённым серверам.</sk19>
	<sk20>Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).</sk20>
	<sk21>База данных Postgres (установка, настройка и использование).</sk21>
	<sk22>Нереляционная база данных Redis (установка, настройка и использование).</sk22>
	<sk23>Нагрузочное тестирование в Jmeter.</sk23>
	<sk24>Методология разработки Scrum.</sk24>
	<sk25>Python. (Изучение основ. Создание клиент серверного приложения)</sk25>
 </skills>

 32. Сделать коммит в одну строку.
 git add .
 git commit -m "Выполняю задание 32 (коммит в одну строку двух файлов)"

 33. Отправить сразу 2 файла на внешний репозиторий.
 git push

 34. На веб интерфейсе создать файл bug_report.xml.
 https://github.com/mmzayats/XML/blob/main/bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 https://github.com/mmzayats/XML/blob/main/bug_report.xml

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 https://github.com/mmzayats/XML/blob/main/bug_report.xml
 <?xml version="1.0"?>
 <Bug_rep>
  <Summary>Where is button?</Summary>
  <Project_number>161</Project_number>
  <Component>Start desktop</Component>
  <fVersion>001.0</Version>
  <Severity>Critical</Severity>
  <Priority>High</Priority>
  <Status>S1</Status>
  <Author>Maksim Zayats</Author>
  <Assigned_To>Anastasiay Zayats</Assigned_To>
  <Description>Not here button 'Sign-in'</Description>
  <Attachment>null</Attachment>
</Bug_rep>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 https://github.com/mmzayats/XML/blob/main/bug_report.xml

 38. Синхронизировать внешний и локальный репозиторий XML
 git pull


TXT
 1. Создать внешний репозиторий c названием TXT.
 https://github.com/mmzayats/TXT

 2. Клонировать репозиторий TXT на локальный компьютер.
 git clone https://github.com/mmzayats/TXT

 3. Внутри локального TXT создать файл “new.txt”.
 touch new.txt

 4. Добавить файл под гит.
 git add .

 5. Закоммитить файл.
 git commit -m "Выполняю задание TXT.6.Отправить файл на GitHub"

 6. Отправить файл на внешний GitHub репозиторий.
 git pull

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 vim new.txt
 ФИО: Zayats Maksim
 Возраст: 34
 Количество домашних животных: 1
 Будущая желаемая зарплата: 2000

 8. Отправить изменения на внешний репозиторий.
 git add .
 git commit -m "Внесены данные о себе"
 git push

 9. Создать файл preferences.txt
 touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 vim preferences.txt
 Любимый фильм:The Client
 Любимый сериал:Gambit Queen
 Любимая еда:Pizza
 Любимое время года:summer
 Сторона которую хотели бы посетить:Portugale

 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 touch skills.txt
 vim skills.txt
 -Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC
 -Что такое клиент-серверная архитектура.
 -HTTP Методы запросов на сервер.
 -Коды ответов HTTP сервера.
 -Структуры HTTP запросов и ответов.
 -Что такое JSON, XML. Их структура.
 -Тестирование API через Postman (JS, автотесты API).
 -Снятие и чтение логов c внешнего сервера.
 -Снифинг http web трафика через Charles и Fiddler.
 -Dev Tools веб браузеров (Google Chrome, FireFox).
 -VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
 -Мобильное тестирование.
 -Особенность iOS, Android, гайдлайны.
 -Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
 -Сборка Android приложений на Android Studio.
 -ADB (управление андройд девайсами).
 -Настройка прокси и vpn на iOS и Android.
 -Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
 -Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
 -Основы bash скриптинг, автоматизация рутинных задач на сервере.
 -Доступ к удалённым серверам.
 -Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
 -База данных Postgres (установка, настройка и использование).
 -Нереляционная база данных Redis (установка, настройка и использование).
 -Нагрузочное тестирование в Jmeter.
 -Методология разработки Scrum.
 -Python. (Изучение основ. Создание клиент серверного приложения)

 12. Сделать коммит в одну строку.
 git add .
 git commit -m "Коммит данных в файлах skills.txt и preferences.txt"

 13. Отправить сразу 2 файла на внешний репозиторий.
 git push

 14. На веб интерфейсе создать файл bug_report.txt.
 https://github.com/mmzayats/TXT/blob/main/bug_report.txt 

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 https://github.com/mmzayats/TXT/blob/main/bug_report.txt

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 https://github.com/mmzayats/TXT/blob/main/bug_report.txt

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 https://github.com/mmzayats/TXT/blob/main/bug_report.txt

 18. Синхронизировать внешний и локальный репозиторий TXT
 git pull